---
/**
 * Breadcrumb Component
 * Accessible breadcrumb navigation with structured data
 */

import type { BreadcrumbItem } from '../../lib/types/blog';

interface Props {
  items: BreadcrumbItem[];
  locale?: 'es' | 'ca' | 'en' | 'fr';
  variant?: 'light' | 'dark';
}

const { items, locale = 'es', variant = 'light' } = Astro.props;

// Generate JSON-LD structured data for SEO
const breadcrumbSchema = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: items.map((item, index) => ({
    '@type': 'ListItem',
    position: index + 1,
    name: item.label,
    ...(item.href && { item: new URL(item.href, Astro.site).toString() }),
  })),
};
---

<nav aria-label="Breadcrumb" class={`breadcrumb breadcrumb-${variant}`}>
  <ol class="breadcrumb-list" itemscope itemtype="https://schema.org/BreadcrumbList">
    {items.map((item, index) => (
      <li
        class="breadcrumb-item"
        itemprop="itemListElement"
        itemscope
        itemtype="https://schema.org/ListItem"
      >
        {item.href ? (
          <a
            href={item.href}
            class="breadcrumb-link"
            itemprop="item"
            aria-current={index === items.length - 1 ? 'page' : undefined}
          >
            <span itemprop="name">{item.label}</span>
          </a>
        ) : (
          <span class="breadcrumb-text" itemprop="name" aria-current="page">
            {item.label}
          </span>
        )}
        <meta itemprop="position" content={String(index + 1)} />
        {index < items.length - 1 && (
          <span class="breadcrumb-separator" aria-hidden="true">/</span>
        )}
      </li>
    ))}
  </ol>
</nav>

<!-- Structured Data for SEO -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />

<style>
  .breadcrumb {
    margin-bottom: 0;
    margin-top: 0;
  }

  .breadcrumb-list {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
    font-family: 'Avenir Next', sans-serif;
  }

  .breadcrumb-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 14px;
    font-weight: 300;
    line-height: 1.5;
  }

  .breadcrumb-link {
    color: #666666;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .breadcrumb-link:hover {
    color: #BA2515;
    text-decoration: underline;
  }

  .breadcrumb-link:focus-visible {
    outline: 2px solid #BA2515;
    outline-offset: 2px;
    border-radius: 2px;
  }

  .breadcrumb-text {
    color: #1a1a1a;
    font-weight: 400;
  }

  .breadcrumb-separator {
    color: #cccccc;
    user-select: none;
    font-size: 14px;
  }

  /* Dark variant for colored backgrounds */
  .breadcrumb-dark .breadcrumb-link {
    color: rgba(255, 255, 255, 0.8);
  }

  .breadcrumb-dark .breadcrumb-link:hover {
    color: #ffffff;
  }

  .breadcrumb-dark .breadcrumb-text {
    color: #ffffff;
  }

  .breadcrumb-dark .breadcrumb-separator {
    color: rgba(255, 255, 255, 0.4);
  }

  /* Mobile adjustments */
  @media (max-width: 640px) {
    .breadcrumb {
      margin-bottom: 1.5rem;
    }

    .breadcrumb-item {
      font-size: 13px;
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .breadcrumb-link {
      transition: none;
    }
  }
</style>
