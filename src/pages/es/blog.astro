---
/**
 * Blog Index Page - Spanish (ES)
 * Main blog page with category filter and post grid
 */

import Layout from '../../layouts/Layout.astro';
import FooterBlack from '../../components/layout/FooterBlack.astro';
import Breadcrumb from '../../components/ui/Breadcrumb.astro';
import CategoryFilter from '../../components/blog/CategoryFilter.astro';
import BlogGrid from '../../components/blog/BlogGrid.astro';
import { useTranslations } from '../../i18n/utils';
import { getCategories } from '../../lib/blog-queries';
import type { BreadcrumbItem } from '../../lib/types/blog';

const locale = 'es';
const t = useTranslations(locale);

// Page metadata
const title = `${t('blog.title')} | SAUWA`;
const description = t('blog.description');

// Breadcrumb items
const breadcrumbItems: BreadcrumbItem[] = [
  { label: t('blog.breadcrumb.home'), href: `/${locale}` },
  { label: t('blog.breadcrumb.blog') },
];

// Fetch categories (server-side)
let categories = [];
try {
  const data = await getCategories();
  categories = data.categories.nodes;
} catch (error) {
  console.error('[Blog Page] Error fetching categories:', error);
}
---

<Layout
  title={title}
  description={description}
  lang={locale}
  pageType="blog"
>
  <main class="blog-page">
    <!-- Header Section -->
    <section class="blog-header">
      <div class="container">
        <div class="header-content">
          <h1 class="blog-title">Diario SAUWA</h1>
          <h2 class="blog-subtitle">{t('blog.subtitle')}</h2>
          <Breadcrumb items={breadcrumbItems} locale={locale} variant="dark" />
        </div>
      </div>
    </section>

    <!-- Category Filter -->
    <section class="blog-filters">
      <CategoryFilter
        categories={categories}
        allCategoriesText={t('blog.category.all')}
        locale={locale}
      />
    </section>

    <!-- Blog Grid -->
    <section class="blog-content">
      <BlogGrid
        locale={locale}
        postsPerPage={9}
        loadMoreText={t('blog.loadmore')}
        loadingText={t('blog.loading')}
        noPostsText={t('blog.noposts')}
        errorText={t('blog.error')}
        retryText={t('blog.retry')}
        readMoreText={t('blog.readmore')}
      />
    </section>
  </main>

  <!-- Footer -->
  <FooterBlack locale={locale} />
</Layout>

<style>
  /* Page Container */
  .blog-page {
    min-height: 100vh;
    background: #ffffff;
    padding-top: 0; /* Removed padding, header has its own */
  }

  /* Header Section */
  .blog-header {
    padding: 10rem 0 3rem; /* Extra top padding for navbar */
    background: #887161;
    position: relative;
  }

  .container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .header-content {
    text-align: center;
  }

  /* Invertir jerarquía como en home: h1 pequeño, h2 grande */
  .blog-title {
    font-family: 'Avenir Next', sans-serif;
    font-size: 18px;
    font-weight: 400;
    letter-spacing: 2px;
    text-transform: uppercase;
    color: rgba(255, 255, 255, 0.9);
    margin: 0 0 1.5rem 0;
  }

  .blog-subtitle {
    font-family: 'Helvetica Neue', 'Avenir Next', sans-serif;
    font-size: 56px;
    font-weight: 100;
    line-height: 1.2;
    color: #FFFFFF;
    margin: 0 0 2.5rem 0;
  }

  /* Filters Section */
  .blog-filters {
    padding: 2.5rem 0;
  }

  /* Content Section */
  .blog-content {
    padding: 2rem 0 4rem;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .blog-page {
      padding-top: 70px;
    }

    .blog-title {
      font-size: 40px;
    }

    .blog-subtitle {
      font-size: 20px;
    }
  }

  @media (max-width: 768px) {
    .blog-page {
      padding-top: 0; /* WDA-295: Eliminar padding para que el fondo marrón llegue arriba */
    }

    .blog-header {
      padding: 2rem 0 1.5rem;
      margin-top: -104px; /* WDA-295: Extender header detrás del navbar */
      padding-top: calc(2rem + 104px); /* WDA-295: Compensar margin negativo + padding original */
    }

    .container {
      padding: 0 1.5rem;
    }

    /* WDA-295: Jerarquía correcta como home - h1 pequeño, h2 grande */
    .blog-title {
      font-size: 16px; /* Pequeño como home (.heading-primary) */
      letter-spacing: 3px;
    }

    .blog-subtitle {
      font-size: 32px; /* Grande como home (.heading-secondary) */
      font-weight: 300;
      line-height: 1.3;
    }

    .blog-filters {
      padding: 2rem 0;
    }

    .blog-content {
      padding: 1.5rem 0 3rem;
    }
  }

  @media (max-width: 640px) {
    /* WDA-295: Mantener jerarquía correcta - h1 pequeño, h2 grande */
    .blog-title {
      font-size: 14px; /* Más pequeño aún en pantallas muy pequeñas */
      letter-spacing: 2px;
    }

    .blog-subtitle {
      font-size: 28px; /* Grande pero ajustado para pantallas pequeñas */
      line-height: 1.3;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .blog-header {
      border-bottom-width: 2px;
    }

    .blog-title,
    .blog-subtitle {
      font-weight: 500;
    }
  }
</style>
